buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
	id 'net.minecrell.licenser' version '0.3'
}

apply plugin: 'net.minecraftforge.gradle.forge'

// === CHANGE BELOW HERE === //

version = "0.1.0"
group = "com.tridevmc"
archivesBaseName = "Compound"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

license {
    header = project.file('HEADER')
}

minecraft {
    version = "1.12.2-14.23.2.2611"
    runDir = "run"
    
 
    mappings = "snapshot_20171130"
    makeObfSourceJar = false 
}

dependencies {


}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version


    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

# Borrowed from Concrete, another great solution for mod utilities!
# (https://github.com/elytra/Concrete)

task buildCore(type: Jar) {
	baseName = 'compound-core'
	from(sourceSets.main.output) {
		include 'com/tridevmc/compound/core/**'
	}
}

task buildGui(type: Jar) {
	baseName = 'compound-gui'
	from(sourceSets.main.output) {
		include 'com/tridevmc/compound/gui/**'
	}
}

task buildInventory(type: Jar) {
	baseName = 'compound-inventory'
	from(sourceSets.main.output) {
		include 'com/tridevmc/compound/inventory/**'
	}
}

reobf {
	buildCore { mappingType = 'SEARGE' }
	buildGui { mappingType = 'SEARGE' }
	buildInventory { mappingType = 'SEARGE' }
}

artifacts {
	archives buildCore, buildGui, buildInventory
}
