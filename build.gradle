plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.cadixdev.licenser' version '0.6.1'
}

apply from: "properties.gradle"

version = modVersion
group = modGroup
archivesBaseName = modBaseName
ext.versionTag = ''

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

license {
    header = project.file('LICENSE-HEADER')
    include '**/*.java'
}

minecraft {
    mappings channel: mappingsChannel, version: mappingsVersion
}

dependencies {
    minecraft "net.minecraftforge:forge:${forgeVersion}"
}

if (file('private.gradle').exists()) {
    apply from: 'private.gradle'
}

def registerModule(LinkedHashMap<String, String> moduleData) {
    def defaultManifestAttributes = ["Specification-Title"     : "Compound",
                                     "Specification-Vendor"    : "Trident",
                                     "Implementation-Title"    : project.name,
                                     "Implementation-Version"  : "${version}",
                                     "Implementation-Vendor"   : "Trident",
                                     "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                                     "FMLModType"              : "GAMELIBRARY"]

    def binaryJar = tasks.register(moduleData.taskName, Jar) {
        baseName = moduleData.artifactName
        from(sourceSets.main.output) {
            include moduleData.sources
        }
        manifest {
            attributes(defaultManifestAttributes)
        }
    }
    def sourcesJar = tasks.register(moduleData.taskName + "Sources", Jar) {
        baseName = moduleData.artifactName
        classifier = 'sources'
        from(sourceSets.main.allSource) {
            include moduleData.sources
        }
        manifest {
            attributes(defaultManifestAttributes)
        }
    }

    artifacts.add("archives", binaryJar)
    artifacts.add("archives", sourcesJar)

    publishing.publications.create(moduleData.publicationName, MavenPublication) {
        groupId 'com.tridevmc.compound'
        artifactId moduleData.artifactName
        version project.version + versionTag
        artifact binaryJar
        artifact sourcesJar
    }
}

apply from: "modules.gradle"

compoundModules.each { LinkedHashMap<String, String> moduleData ->
    registerModule(moduleData)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

publish.dependsOn('reobfJar')